/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

/ {
    behaviors {
        tp: tap_preferred {
            compatible = "zmk,behavior-hold-tap";
            label = "TAP_PREFERRED";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        tap_dance: tap_dance {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE";
            #binding-cells = <0>;
            bindings = <&kp SQT>, <&kp LS(SINGLE_QUOTE)>, <&kp QUESTION>;

            tapping-term-ms = <150>;
        };

        layer_dance: layer_dance {
            compatible = "zmk,behavior-tap-dance";
            label = "LAYER_DANCE";
            #binding-cells = <0>;
            bindings = <&to 1>, <&to 0>;

            tapping-term-ms = <150>;
        };

        Hold_KP_tap_layer: Hold_KP_tap_layer {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLD_KP_TAP_LAYER";
            bindings = <&kp>, <&to>;

            #binding-cells = <2>;
            tapping-term-ms = <150>;
            flavor = "tap-preferred";
        };

        Hold_tap_100ms: Hold_tap_100ms {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLD_TAP_100MS";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <100>;
        };
    };

    combos {
        compatible = "zmk,combos";

        minus {
            bindings = <&kp MINUS>;
            key-positions = <5 6>;
        };

        equals {
            bindings = <&kp EQUAL>;
            key-positions = <17 18>;
        };

        taskmanager {
            bindings = <&kp RC(RA(DELETE))>;
            key-positions = <24 35>;
        };

        underscore {
            bindings = <&kp UNDER>;
            key-positions = <29 30>;
        };

        screen_shot {
            bindings = <&kp LG(LS(S))>;
            key-positions = <13 22>;
        };

        CapsWord {
            bindings = <&caps_word>;
            key-positions = <16 19>;
        };

        bluetooth {
            bindings = <&to 3>;
            key-positions = <36 41>;
        };

        Dota_layer {
            bindings = <&to 4>;
            key-positions = <37 40>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        CHARS {
            // -----------------------------------------------------------------------------------------
            // | TAB  |  Q  |  W  |  E  |  R  |    T    |   |  Y  |  U   |  I  |  O  |  P  | ESC |
            // | CTRL |  A  |  S  |  D  |  F  |    G    |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |    B    |   |  N  |  M   |  ,  |  .  |  /  | SHFT |
            //                    | GUI | LWR | ALT/ENT |   | HYPER/SPC | BKSP  | RSE |

            bindings = <
&kp TAB    &kp Q  &kp W  &kp E     &kp R                              &kp T             &kp Y                    &tp LA(LC(U)) U  &kp I                &kp O                    &kp P               &kp ESC
&kp LCTRL  &kp A  &kp S  &kp D     &kp F                              &kp G             &kp H                    &kp J            &kp K                &kp L                    &kp SEMI            &tap_dance
&kp LSHFT  &kp Z  &kp X  &kp C     &kp V                              &kp B             &kp N                    &kp M            &tp LESS_THAN COMMA  &tp GREATER_THAN PERIOD  &tp QUESTION SLASH  &kp DELETE
                         &kp LGUI  &Hold_KP_tap_layer LEFT_CONTROL 1  &tp LALT SPACE    &tp LEFT_SHIFT KP_ENTER  &kp BSPC         &to 2
            >;

            label = "CHARS";
        };

        Numbers {
            // -----------------------------------------------------------------------------------------
            // |      |  !  |  @  |  #  |  $  |    %     |   |  ^  |  &  |  *  |  (  |  )  |   \   |
            // |      |  1  |  2  |  3  |  4  |    5     |   |  -  |  =  |  `  |  [  |  ]  |  "|"  |
            // | SHFT |  6  |  7  |  8  |  9  |    0     |   |  _  |  +  |  ~  |  {  |  }  | RSHFT |
            //                     | GUI |     | ALT/ENT |   | HYPER/SPACE | BKSP |    |

            bindings = <
&trans     &kp EXCL  &kp AT  &kp HASH  &kp DLLR  &kp PRCNT    &kp CARET   &kp AMPS   &kp ASTERISK  &kp LPAR  &kp RPAR  &kp BSLH
&trans     &kp N1    &kp N2  &kp N3    &kp N4    &kp N5       &kp MINUS   &kp EQUAL  &kp GRAVE     &kp LBKT  &kp RBKT  &kp PIPE
&kp LSHFT  &kp N6    &kp N7  &kp N8    &kp N9    &kp N0       &kp PERIOD  &kp PLUS   &kp TILDE     &kp LBRC  &kp RBRC  &kp DEL
                             &trans    &to 0     &trans       &trans      &trans     &to 2
            >;

            label = "Numbers";
        };

        FN {
            // -----------------------------------------------------------------------------------------
            // |       |  F1  |  F2  |  F3  |  F4  |  F5 |            |  F6  |  F7  |  F8  |  F9  |  F10  |   |
            // |       | Prev | Next | Vol - | Vol + | Play/Pause |   |      | LFT | DWN |  UP | RGT |     |     |
            // | BTCLR | BT1 | BT2 | BT3 | BT4 | BT5 |   |            |     |     |     |     |     |     |
            //                    |     |     |    |                  |     |     |     |

            bindings = <
&trans  &kp F1      &kp F2      &kp F3        &kp F4           &kp F5         &kp F6           &kp F7       &kp F8  &kp F9     &kp F10  &kp F11
&trans  &kp C_PREV  &kp C_NEXT  &kp C_VOL_DN  &kp C_VOL_UP     &kp C_PP       &kp LEFT         &kp DOWN     &kp UP  &kp RIGHT  &trans   &kp F12
&trans  &trans      &trans      &trans        &kp LS(LC(TAB))  &kp LC(TAB)    &kp LC(LS(TAB))  &kp LC(TAB)  &trans  &trans     &trans   &trans
                                &trans        &to 0            &trans         &trans           &trans       &to 1
            >;

            label = "Fn";
        };

        BT {
            bindings = <
&trans  &bt BT_PRV     &bt BT_NXT    &trans  &trans  &out OUT_TOG    &bt BT_CLR  &trans  &trans  &trans  &trans  &trans
&trans  &trans         &trans        &trans  &trans  &trans          &trans      &trans  &trans  &trans  &trans  &trans
&trans  &bt BT_DISC 0  &bt BT_SEL 0  &trans  &trans  &trans          &trans      &trans  &trans  &trans  &trans  &trans
                                     &trans  &to 0   &trans          &trans      &trans  &trans
            >;

            label = "BT";
        };

        Dota {
            bindings = <
&kp ESC    &kp Q  &kp W  &kp E     &kp R      &kp T                             &kp Y      &kp U   &kp I      &kp O    &kp P   &kp BSPC
&kp TAB    &kp A  &kp S  &kp D     &kp F      &kp G                             &kp H      &kp J   &kp K      &kp L    &trans  &kp F9
&kp LCTRL  &kp Z  &kp X  &kp C     &kp V      &kp B                             &kp N      &kp M   &kp COMMA  &kp DOT  &trans  &trans
                         &kp CAPS  &kp LSHFT  &Hold_tap_100ms LEFT_ALT SPACE    &kp ENTER  &trans  &to 0
            >;

            label = "Dota";
        };
    };
};
